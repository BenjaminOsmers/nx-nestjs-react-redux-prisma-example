// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id          String @id @default(cuid())
  name        String
  email       String @unique
  password    String
  isAdmin     Boolean @default(false) @map("is_admin")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  products  Product[]
  reviews   Review[]
  orders    Order[]

  @@map("user")
}

model Product {
  id            String @id @default(cuid())
  userId        String @map("user_id")
  name          String
  image         String
  brand         String
  category      String
  description   String
  rating        Int @default(0)
  numReviews    Int @default(0) @map("num_reviews")
  price         Float
  countInStock  Int @map("count_in_stock")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  user          User @relation(fields: [userId], references: [id])

  reviews       Review[]
  orders        OrderItem[]

  @@map("product")
}

model Review {
  productId     String @map("product_id")
  userId        String @map("user_id")
  rating        Int
  comment       String
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  user          User @relation(fields: [userId], references: [id])
  product       Product @relation(fields: [productId], references: [id])

  @@id([productId, userId])
  @@map("review")
}

model Order {
  id            String @id @default(cuid())
  userId        String @map("user_id")
  items         OrderItem[]
  quantity      Int
  totalPrice    Float @map("total_price")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  street       String
  city         String
  postalCode   String @map("postal_code")
  country      String

  isDelivered  Boolean @default(false) @map("is_delivered")
  isPaid       Boolean @default(false) @map("is_paid")
  deliveredAt  DateTime? @map("delivered_at")
  paidAt       DateTime? @map("paid_at")

  user         User @relation(fields: [userId], references: [id])

  @@map("order")
}

model OrderItem {
  orderId       String @map("order_id")
  productId     String @map("product_id")
  quantity      Int

  order         Order @relation(fields: [orderId], references: [id])
  product       Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
  @@map("order_item")
}
